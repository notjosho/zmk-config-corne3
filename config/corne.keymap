/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB       &kp Q      &kp W      &kp E       &kp R       &kp T         &kp Y   &kp U        &kp I       &kp O      &kp P         &kp BSPC
   &hm LCTRL ESC &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G         &kp H   &hm RSHFT J  &hm RCTRL K &hm RALT L &hm RGUI SEMI &kp SQT
   &kp LSHFT     &kp Z      &kp X      &kp C       &kp V       &kp B         &kp N   &kp M        &kp COMMA   &kp DOT    &kp FSLH      &kp ESC
                                       &kp LALT    &mo 3       &kp SPACE     &kp RET &mo 4        &kp RALT
                        >;
                };

                qwerty_no_homerows_layer {
// -----------------------------------------------------------------------------------------
// | TAB_ |  q  |  w  |  e  |  r  |  t  |   |  y  |  u  |  i  |  o  |  p  | BKSP |
// | CTRL |  a  |  s  |  d  |  f  |  g  |   |  h  |  j  |  k  |  l  |  ;  |  '   |
// | SHFT |  z  |  x  |  c  |  v  |  b  |   |  n  |  m  |  ,  |  .  |  /  | SHFT |
//                    | ALT | mo2 | SPC |   | ENT | mo3 | RALT|

  bindings = <
        &kp TAB       &kp Q &kp W &kp E    &kp R &kp T        &kp Y   &kp U &kp I     &kp O   &kp P    &kp BSPC
        &hm LCTRL ESC &kp A &kp S &kp D    &kp F &kp G        &kp H   &kp J &kp K     &kp L   &kp SEMI &kp SQT
        &kp LSHFT     &kp Z &kp X &kp C    &kp V &kp B        &kp N   &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                                  &kp LALT &mo 3 &kp SPACE    &kp RET &mo 4 &kp RALT 
    >;
                };

		dvorak_layer {
// -----------------------------------------------------------------------------------------
// | TAB_ |  ;  |  ,  |  .  |  p  |  y  |   |  f  |  g  |  c  |  r  |  l  | BKSP |
// | CTRL |  a  |  o  |  e  |  u  |  i  |   |  d  |  h  |  t  |  n  |  s  |  /   |
// | SHFT |  '  |  q  |  j  |  k  |  x  |   |  b  |  m  |  w  |  v  |  z  | SHFT |
//                    | ALT | mo4 | SPC |   | ENT | mo5 | mo6 |

    bindings = <
        &kp TAB       &kp SEMI   &kp COMMA  &kp DOT     &kp P       &kp Y         &kp F   &kp G      &kp C       &kp R      &kp L      &kp BSPC
        &hm LCTRL ESC &hm LGUI A &hm LALT O &hm LCTRL E &hm LSHFT U &kp I         &kp D   &hm RSFT H &hm RCTRL T &hm RALT N &hm RGUI S &kp FSLH
        &kp LSHFT     &kp SQT    &kp Q      &kp J       &kp K       &kp X         &kp B   &kp M      &kp W       &kp V      &kp Z      &kp RSHFT
                                            &kp LALT    &mo 3       &kp SPACE     &kp RET &mo 4      &kp RALT
    >;
};


                lower_layer {
// -----------------------------------------------------------------------------------------
// |  T0  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  \  |
// |  T1  |  1  |  2  |  3  |  4  |  5  |   |  -  |  =  |  \  |  [  |  ]  |  |  |
// |  T2  |  6  |  7  |  8  |  9  |  0  |   |  _  |  +  |  ~  |  {  |  }  |     |
//                    |     |     |     |   |     |     |     |

  bindings = <
    &to 0 &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSLH
    &to 1 &kp N1   &kp N2 &kp N3   &kp N4   &kp N5         &kp MINUS &kp EQUAL &kp GRAVE &kp LBKT &kp RBKT &kp PIPE
    &to 2 &kp N6   &kp N7 &kp N8   &kp N9   &kp N0         &kp UNDER &kp PLUS  &kp TILDE &kp LBRC &kp RBRC &trans
	                  &trans   &trans   &trans         &trans    &trans    &trans
  >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| _F1 | _F2 | _F3 | _F4 | _F5 |   |     | HOM | END | DEL | PRV | NXT |
// | BT0  | _F6 | _F7 | _F8 | _F9 | F10 |   | LFT | DWN | _UP | RGT | VDN | VUP |
// | BT1  | BT2 | BT3 | BT4 | F11 | F12 |   |     | PGD | PGU | INS | PLY | MUT |
//                    |     |     |     |   |     |     |     |

    bindings = <
        &bt BT_CLR   &kp F1       &kp F2       &kp F3       &kp F4  &kp F5       &trans   &kp HOME  &kp END   &kp DEL   &kp C_PREV   &kp C_NEXT
        &bt BT_SEL 0 &kp F6       &kp F7       &kp F8       &kp F9  &kp F10      &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp C_VOL_DN &kp C_VOL_UP
        &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp F11 &kp F12      &trans   &kp PG_DN &kp PG_UP &kp INS   &kp C_PP     &kp C_MUTE
                                               &trans       &trans  &trans       &trans   &trans    &trans
    >;
                };

        };
};
